// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.6.1
// source: github.com/solo-io/bumblebee/api/bumblebee.io/probes/v1alpha1/probe.proto

package v1alpha1

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ProbeSpec_PullPolicy int32

const (
	ProbeSpec_IfNotPresent ProbeSpec_PullPolicy = 0
	ProbeSpec_Always       ProbeSpec_PullPolicy = 1
	ProbeSpec_Never        ProbeSpec_PullPolicy = 2
)

// Enum value maps for ProbeSpec_PullPolicy.
var (
	ProbeSpec_PullPolicy_name = map[int32]string{
		0: "IfNotPresent",
		1: "Always",
		2: "Never",
	}
	ProbeSpec_PullPolicy_value = map[string]int32{
		"IfNotPresent": 0,
		"Always":       1,
		"Never":        2,
	}
)

func (x ProbeSpec_PullPolicy) Enum() *ProbeSpec_PullPolicy {
	p := new(ProbeSpec_PullPolicy)
	*p = x
	return p
}

func (x ProbeSpec_PullPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProbeSpec_PullPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_enumTypes[0].Descriptor()
}

func (ProbeSpec_PullPolicy) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_enumTypes[0]
}

func (x ProbeSpec_PullPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProbeSpec_PullPolicy.Descriptor instead.
func (ProbeSpec_PullPolicy) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDescGZIP(), []int{0, 0}
}

type ProbeSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Image name of the probe to run.
	Image           string               `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	ImagePullPolicy ProbeSpec_PullPolicy `protobuf:"varint,2,opt,name=image_pull_policy,json=imagePullPolicy,proto3,enum=probes.bumblebee.io.ProbeSpec_PullPolicy" json:"image_pull_policy,omitempty"`
	// List of node labels to run the probe on.
	// If empty, the probe will run on all nodes.
	NodeSelector map[string]string `protobuf:"bytes,3,rep,name=node_selector,json=nodeSelector,proto3" json:"node_selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Additional labels to add to all programs loaded by this probe
	AdditionalLabels map[string]string `protobuf:"bytes,4,rep,name=additional_labels,json=additionalLabels,proto3" json:"additional_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProbeSpec) Reset() {
	*x = ProbeSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeSpec) ProtoMessage() {}

func (x *ProbeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeSpec.ProtoReflect.Descriptor instead.
func (*ProbeSpec) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDescGZIP(), []int{0}
}

func (x *ProbeSpec) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ProbeSpec) GetImagePullPolicy() ProbeSpec_PullPolicy {
	if x != nil {
		return x.ImagePullPolicy
	}
	return ProbeSpec_IfNotPresent
}

func (x *ProbeSpec) GetNodeSelector() map[string]string {
	if x != nil {
		return x.NodeSelector
	}
	return nil
}

func (x *ProbeSpec) GetAdditionalLabels() map[string]string {
	if x != nil {
		return x.AdditionalLabels
	}
	return nil
}

var File_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto protoreflect.FileDescriptor

var file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDesc = []byte{
	0x0a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x62, 0x75, 0x6d, 0x62, 0x6c, 0x65, 0x62, 0x65, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x62, 0x75, 0x6d, 0x62, 0x6c, 0x65, 0x62, 0x65, 0x65, 0x2e, 0x69, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x62, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x70, 0x72, 0x6f,
	0x62, 0x65, 0x73, 0x2e, 0x62, 0x75, 0x6d, 0x62, 0x6c, 0x65, 0x62, 0x65, 0x65, 0x2e, 0x69, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x65,
	0x78, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xef, 0x03, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x55, 0x0a, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70,
	0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x73, 0x2e, 0x62, 0x75, 0x6d, 0x62, 0x6c, 0x65,
	0x62, 0x65, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x55, 0x0a, 0x0d,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x73, 0x2e, 0x62, 0x75, 0x6d,
	0x62, 0x6c, 0x65, 0x62, 0x65, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x61, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x73, 0x2e, 0x62, 0x75, 0x6d, 0x62, 0x6c, 0x65, 0x62, 0x65,
	0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x43, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x35, 0x0a, 0x0a,
	0x50, 0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x66,
	0x4e, 0x6f, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x41, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x65, 0x76, 0x65,
	0x72, 0x10, 0x02, 0x42, 0x4f, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x62, 0x75, 0x6d, 0x62, 0x6c, 0x65,
	0x62, 0x65, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x62,
	0x65, 0x73, 0x2e, 0x62, 0x75, 0x6d, 0x62, 0x6c, 0x65, 0x62, 0x65, 0x65, 0x2e, 0x69, 0x6f, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xb8, 0xf5, 0x04, 0x01, 0xc0, 0xf5, 0x04, 0x01,
	0xd0, 0xf5, 0x04, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDescOnce sync.Once
	file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDescData = file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDesc
)

func file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDescData)
	})
	return file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDescData
}

var file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_goTypes = []interface{}{
	(ProbeSpec_PullPolicy)(0), // 0: probes.bumblebee.io.ProbeSpec.PullPolicy
	(*ProbeSpec)(nil),         // 1: probes.bumblebee.io.ProbeSpec
	nil,                       // 2: probes.bumblebee.io.ProbeSpec.NodeSelectorEntry
	nil,                       // 3: probes.bumblebee.io.ProbeSpec.AdditionalLabelsEntry
}
var file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_depIdxs = []int32{
	0, // 0: probes.bumblebee.io.ProbeSpec.image_pull_policy:type_name -> probes.bumblebee.io.ProbeSpec.PullPolicy
	2, // 1: probes.bumblebee.io.ProbeSpec.node_selector:type_name -> probes.bumblebee.io.ProbeSpec.NodeSelectorEntry
	3, // 2: probes.bumblebee.io.ProbeSpec.additional_labels:type_name -> probes.bumblebee.io.ProbeSpec.AdditionalLabelsEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_init() }
func file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_init() {
	if File_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto = out.File
	file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_rawDesc = nil
	file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_goTypes = nil
	file_github_com_solo_io_bumblebee_api_bumblebee_io_probes_v1alpha1_probe_proto_depIdxs = nil
}
